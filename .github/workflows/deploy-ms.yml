name: DeployMicroservice

on:
  push:
    branches:
    - '**'
    paths:
    - 'non-existing-path/**'

  workflow_dispatch:
    inputs:
      dockerfile:
        description: 'The Dockerfile to build'
        required: true
      docker-image-tag:
        description: 'The Docker image tag'
        required: true
      deployment:
        description: 'The deployment name'
        required: true
      version:
        description: 'The version to deploy as'
        required: true
      source-path:
        description: 'The relative path to the source'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push Production Image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: ${{ github.event.inputs.dockerfile }}
        tags: ${{ github.event.inputs.docker-image-tag }}:${{ github.event.inputs.version }}
    
    - name: Write version info
      id: write-version-info
      uses: dolittle/write-version-to-file-action@v1
      with:
        path: '${{ github.event.inputs.source-path }}/microservice.json'
        version: ${{ github.event.inputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}


    #Deploy to our k8s cluster

    # - name: 'Install latest Kubectl'
    #   uses: azure/setup-kubectl@v1
    #   with:
    #     version: 'latest'

    # - name: 'Set k8s context'
    #   uses: azure/aks-set-context@v1
    #   with:
    #       creds: '${{ secrets.AZURE_CREDENTIALS }}'
    #       resource-group: "Infrastructure-Essential"
    #       cluster-name: "Cluster-Production-Two"

    # - name: 'Deploy to Development'
    #   run: |
    #     kubectl patch --namespace application-fe7736bb-57fc-4166-bb91-6954f4dd4eb7 deployment ${{ github.event.inputs.deployment }} -p '{"spec": { "template": {"metadata": { "labels": { "date": "'`date +'%s'`'" } }, "spec": { "containers": [{ "name":"head", "image": "${{ env.CONTAINER_REGISTRY }}/${{ github.event.inputs.docker-image-tag }}:'"${{ github.event.inputs.version }}"'"}] }}}}'
