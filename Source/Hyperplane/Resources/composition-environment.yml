apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: application
  labels:
    crossplane.io/xrd: xapplications.dolittle.io
spec:
  compositeTypeRef:
    apiVersion: dolittle.io/v1alpha1
    kind: XApplication
  patchSets:
  - name: metadata
    patches:
    # - fromFieldPath: metadata.labels
    #   toFieldPath: metadata.labels
    # - fromFieldPath: metadata.annotations
    #   toFieldPath: metadata.annotations
    # - fromFieldPath: metadata
    #   toFieldPath: spec.forProvider.manifest.metadata
    - fromFieldPath: metadata.annotations[dolittle.io/application-id]
      toFieldPath: spec.forProvider.manifest.metadata.namespace
      transforms:
      - type: string
        string:
          fmt: "application-%s"
  resources:
  - name: deployment
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        providerConfigRef:
          name: provider-kubernetes
        forProvider:
          manifest:
            apiVersion: v1
            kind: Namespace
        references:
        - patchesFrom:
            apiVersion: v1
            # dependsOn: Make it depend on some sort of environment crossplane CRD and get the other labels from it
            kind: Namespace
            fieldPath: metadata.labels
          toFieldPath: spec.forProvider.manifest.metadata.labels
        
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
      toFieldPath: spec.references[0].patchesFrom.namespace
    - fromFieldPath: spec.deployment.name
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.deployment.runtime.version
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].image
      transforms:
      - type: string
        string:
          fmt: "dolittle/runtime:%s"